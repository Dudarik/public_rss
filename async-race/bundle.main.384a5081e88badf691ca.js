(()=>{"use strict";var t,e,n,r;!function(t){t.Get="GET",t.Post="POST",t.Delete="DELETE",t.Put="PUT",t.Patch="PATCH"}(t||(t={})),function(t){t.Started="started",t.Stopped="stopped",t.Drive="drive"}(e||(e={})),function(t){t.Num="num",t.Wins="wins",t.Time="time"}(n||(n={})),function(t){t.Asc="ASC",t.Desc="DESC"}(r||(r={}));const a={cars:[],countCars:0,countWinners:0,lastWinner:{id:-1,time:-1},carsRaceTime:{},carsRace:{},carsHTML:{},editorCar:{carEditId:-1,formInputCreate:null,formInputEdit:null,inputColorCreate:null,inputColorEdit:null,btnEditorUpdate:null,btnEditorCreate:null,btnStartRace:null,btnResetRace:null,btnGaragePrevPage:null,btnGarageNextPage:null},controls:{},renderPosition:{},inGame:!1,currentGaragePage:1,pagesCountGarage:0,carsPerPage:7,currentWinnersPage:1,winnerPerPage:10,pagesCountWinner:0,sortWinners:n.Wins,SortOrderWinners:r.Desc,winnersTable:[],carsBrands:["Chrysler","Dodge","Jeep","Ram","Ford","Lincoln","Cadillac","Chevrolet","Tesla","Audi","BMW","Daimler","Lotec","Mercedes","Vauxhall","Volkswagen","AZLK","Lada","Moskvitch","Volga"],carsModels:["A3","Sandero","2106","RS","e-tron","TTS","Golf","Bulldog","Pagoda","DB7","LeMans","Aspen","Cordoba","Crossfire","Concorde","Stratus","Viper"]},o=t=>{const e=document.createElement("template");if(e.innerHTML=t,!e.content.firstElementChild)throw new Error("Can't create element");return e.content.firstElementChild};var s;!function(t){t.BtnStartOne="BtnStartOne",t.BtnRemoveOne="BtnRemoveOne",t.BtnResetOne="BtnResetOne",t.BtnSelectOne="BtnSelectOne",t.BtnCreateCar="BtnCreateCar",t.BtnUpdateEdit="BtnUpdateEdit",t.BtnAdd100Cars="BtnAdd100Cars",t.BtnStartRace="BtnStartRace",t.BtnResetRace="BtnResetRace",t.BtnGaragePrevPage="BtnGaragePrevPage",t.BtnGarageNextPage="BtnGarageNextPage",t.BtnWinnerPrevPage="BtnWinnerPrevPage",t.BtnWinnerNextPage="BtnWinnerNextPage"}(s||(s={}));const i=(t,e)=>{const{btnType:n,handler:r,carId:a,disabled:o}=e,s=document.createElement("button");return s.innerText=t,s.classList.add("btn"),s.dataset.btnType=n,"function"==typeof r&&s.addEventListener("click",r),a&&(s.dataset.carId=a.toString()),o&&s.setAttribute("disabled","disabled"),s},c=async(e,n)=>{const{body:r,...a}=n;if("object"!=typeof r&&void 0!==r)throw new Error("Body must be an object {name: string; color: string;} or undefined");const o={method:r?t.Post:t.Get,...a,headers:{"Content-type":"application/json"}};"object"==typeof a.headers&&Object.assign(o.headers,a.headers),r&&(o.body=JSON.stringify(r));try{const t=await fetch(e,o);if(!t.ok)throw new Error(t.status.toString());return t}catch(t){return t instanceof Error?Promise.reject(t):Promise.reject(new Error("Cant resolve promise"))}};c.get=async function(t,e={}){return await c(t,e)},c.post=function(t,e,n={}){return c(t,{body:e,...n})},c.delete=function(e,n={}){return c(e,{method:t.Delete,...n})},c.put=function(e,n,r={}){return c(e,{body:n,method:t.Put,...r})},c.patch=function(e,n,r={}){return c(e,{body:n,method:t.Patch,...r})};const l="http://127.0.0.1:3000",d=`${l}/garage`,u=`${l}/engine`,m=`${l}/winners`,p=async t=>{const e=`${d}/${t}`,n=await c.get(e);if(!n)throw new Error(`Can't get car with id=${t}`);return Object(n.json())},f=async t=>{const e=await c.post(d,t);let n={id:-1,name:"unknown",color:"unknown"};return"object"==typeof e&&(n=Object(e)),n},h=async t=>{const e=`${m}/${t}`;let n={id:-1,wins:0,time:0};try{const t=await c.get(e).then((t=>t.json()));n=Object(t)}catch(t){return n}return n},w=async()=>{const{winners:t,countWinners:e}=await(async(t,e,n,r)=>{const a=`${m}?_page=${t}&_limit=${e}&_sort=${n}&_order=${r}`,o={headers:{"X-Total-Count":e.toString()}};let s=[];const i=await c.get(a,o),l=i.headers.get("X-Total-Count");let d=0;const u=await i.json();return l&&(d=parseInt(l,10)),console.log(u),Array.isArray(u)&&(s=Array.from(u)),{countWinners:d,winners:s}})(a.currentWinnersPage,a.winnerPerPage,a.sortWinners,a.SortOrderWinners);a.countWinners=e,a.pagesCountWinner=Math.ceil(e/a.winnerPerPage);const n=t.map((t=>p(t.id))),r=await Promise.all(n);a.winnersTable=t.map((t=>Object.assign(t,r.filter((e=>e.id===t.id))[0])))},g=async()=>{const{cars:t,countCars:e}=await(async(t,e)=>{const n=`${d}?_page=${t}&_limit=${e}`,r={headers:{"X-Total-Count":e.toString()}};let a=[];const o=await c.get(n,r),s=o.headers.get("X-Total-Count");let i=0;s&&(i=parseInt(s,10));const l=await o.json();return Array.isArray(l)&&(a=Array.from(l)),{countCars:i,cars:a}})(a.currentGaragePage,a.carsPerPage);a.cars=t,a.countCars=e,a.pagesCountGarage=Math.ceil(e/a.carsPerPage),w(),(()=>{for(let t=0;t<a.cars.length;t+=1)a.carsRace[a.cars[t].id]=!1})(),(()=>{for(let t=0;t<a.cars.length;t+=1)a.controls[a.cars[t].id]={remove:null,reset:null,select:null,start:null}})()},b=(t,e)=>{const n=performance.now();let r=-1;void 0!==t.dataset.carId&&(r=parseInt(t.dataset.carId,10)),requestAnimationFrame((function o(s){const i=(s-n)/e;t.style.transform=`translate(${90*i}%)`,i<1&&a.carsRace[r]&&requestAnimationFrame(o)}))},v=t=>{a.controls[t].remove?.setAttribute("disabled","disabled"),a.controls[t].start?.setAttribute("disabled","disabled"),a.controls[t].select?.setAttribute("disabled","disabled"),a.controls[t].reset?.removeAttribute("disabled")},y=t=>{a.controls[t].remove?.removeAttribute("disabled"),a.controls[t].start?.removeAttribute("disabled"),a.controls[t].select?.removeAttribute("disabled"),a.controls[t].reset?.setAttribute("disabled","disabled")},E=t=>{const e=o('<div class="infoAndNav"> <h2 class="info_title"><span id="countRecordsTitle"></span>: <span id="countRecords"></span></h2> <h3 class="info_Subtitle">Page: <span id="currentPage"></span> (<span id="pages"></span>)</h3> <div class="btns"> <button data-btn-type="" id="btnPrevPage" class="btn">Prev page</button><button data-btn-type="" id="btnNextPage" class="btn">Next page</button> </div> </div> '),{countTitleText:n,storeField:r,storeFieldCurrentPage:s,storeFieldPages:i,btnPrevPageType:c,btnNextPageType:l}=t,d=e.querySelector("#countRecordsTitle"),u=e.querySelector("#countRecords"),m=e.querySelector("#currentPage"),p=e.querySelector("#pages"),f=e.querySelector("#btnPrevPage"),h=e.querySelector("#btnNextPage");if(!(d instanceof HTMLSpanElement&&u instanceof HTMLSpanElement&&m instanceof HTMLSpanElement&&p instanceof HTMLSpanElement))throw new Error("Can't find span for info");if(!(f instanceof HTMLButtonElement&&h instanceof HTMLButtonElement))throw new Error("Can't find buttons for Nav");return f.dataset.btnType=c,h.dataset.btnType=l,d.innerText=n,u.innerText=a[r].toString(),m.innerText=a[s].toString(),p.innerText=a[i].toString(),e},T=t=>{const e=o('<section id="garage" class="garage"></section> '),n=(t=>{const e=o('<form id="editor_form" class="editor_form"> <div class="create_car"> <input type="text" class="input_text-editor" id="inputCreate" placeholder="Input car name"/><input type="color" class="input_color-editor" id="inputColorCreate"/><button class="btn" id="btnEditorCreate" data-btn-type="BtnCreateCar"> Create </button> </div> <div class="update_car"> <input type="text" class="input_text-editor" id="inputEdit" placeholder="Select car" disabled="disabled"/><input type="color" class="input_color-editor" id="inputColorEdit" disabled="disabled"/><button class="btn" id="btnEditorUpdate" data-btn-type="BtnUpdateEdit" disabled="disabled"> Update </button> </div> <div class="control_race_bnts"> <button class="btn" id="btnGenerate100" data-btn-type="BtnAdd100Cars">Generate 100</button> <button class="btn" id="btnStartRace" data-btn-type="BtnStartRace">Start</button> <button class="btn" id="btnResetRace" data-btn-type="BtnResetRace" disabled="disabled">Reset</button> </div> </form> ');t&&t.length>0&&e.append(...t);const n=E({countTitleText:"Garage",storeField:"countCars",storeFieldCurrentPage:"currentGaragePage",storeFieldPages:"pagesCountGarage",btnPrevPageType:"BtnGaragePrevPage",btnNextPageType:"BtnGarageNextPage"});return e.append(n),(t=>{const e=t.querySelector("#btnStartRace"),n=t.querySelector("#btnResetRace");if(!(e instanceof HTMLButtonElement&&n instanceof HTMLButtonElement))throw new Error("Can't find Start or Reset button for editor");a.inGame&&(e.setAttribute("disabled","disabled"),n.removeAttribute("disabled")),a.editorCar.btnStartRace=e,a.editorCar.btnResetRace=n})(e),(t=>{const e=t.querySelector("#inputCreate"),n=t.querySelector("#inputEdit"),r=t.querySelector("#inputColorCreate"),o=t.querySelector("#inputColorEdit"),s=t.querySelector("#btnEditorUpdate"),i=t.querySelector("#btnEditorCreate");if(!(e instanceof HTMLInputElement&&n instanceof HTMLInputElement))throw new Error("Can't find input for editor");if(!(r instanceof HTMLInputElement&&o instanceof HTMLInputElement))throw new Error("Can't find inputColor for editor");if(!(s instanceof HTMLButtonElement&&i instanceof HTMLButtonElement))throw new Error("Can't find Create or Update button for editor");a.editorCar.formInputCreate=e,a.editorCar.formInputEdit=n,a.editorCar.inputColorCreate=r,a.editorCar.inputColorEdit=o,a.editorCar.btnEditorUpdate=s,a.editorCar.btnEditorCreate=i})(e),e})(),r=a.cars.map((t=>((t,e)=>{const n=o('<div class="carline"> <div class="wrapper"> <div class="wrapper_controls"> <div class="carline_controls" id="carline_controls"></div> <div class="car_name" id="car_name"></div> </div> <div class="road"> <div class="ufo" id="ufo"> <svg version="1.0" xmlns="http://www.w3.org/2000/svg" width="48.000000pt" height="48.000000pt" viewBox="0 0 512.000000 512.000000" preserveAspectRatio="xMidYMid meet" class="car" id="car_img"> <g transform="translate(0.000000,512.000000) scale(0.100000,-0.100000)" stroke="none"> <path d="M2736 3959 c-387 -59 -699 -317 -822 -677 -19 -54 -38 -131 -45 -173\nl-11 -76 -137 -6 c-151 -6 -219 -22 -327 -73 -245 -116 -410 -358 -431 -634\nl-6 -80 -54 0 c-44 0 -58 -5 -78 -25 -30 -29 -32 -74 -6 -106 16 -20 31 -25\n92 -29 l72 -5 18 -52 c69 -204 243 -387 443 -463 39 -16 96 -33 127 -39 55\n-12 56 -12 85 -74 65 -139 229 -260 388 -288 102 -17 295 -7 375 20 129 44\n243 142 304 258 l32 63 205 0 205 0 33 -64 c68 -131 213 -240 359 -271 81 -17\n246 -19 329 -4 32 6 92 26 132 45 94 43 193 140 242 236 35 67 35 68 90 79\n277 57 514 282 587 559 24 89 23 291 -1 379 -55 201 -194 378 -376 479 -81 45\n-211 82 -320 90 l-95 7 -7 59 c-50 395 -356 736 -758 843 -87 24 -115 26 -340\n29 -135 1 -272 -1 -304 -7z m605 -177 c308 -83 542 -317 620 -620 10 -41 19\n-88 19 -104 l0 -28 -981 0 -980 0 7 48 c3 26 19 88 35 137 80 253 292 466 547\n550 115 37 189 44 427 41 193 -3 242 -7 306 -24z m-1378 -1356 c67 -27 115\n-115 102 -184 -16 -88 -84 -146 -170 -146 -148 0 -229 171 -132 281 53 60 129\n79 200 49z m1077 -6 c54 -27 83 -72 88 -137 5 -64 -9 -103 -54 -143 -45 -39\n-102 -54 -154 -40 -48 13 -103 59 -120 100 -18 44 -8 130 19 169 48 67 145 90\n221 51z m1053 6 c44 -18 95 -78 103 -121 20 -111 -60 -209 -171 -209 -149 0\n-225 169 -127 286 46 55 126 73 195 44z m-1523 -934 c0 -18 -72 -91 -118 -120\n-74 -48 -156 -65 -292 -60 -103 3 -122 7 -180 34 -61 29 -139 95 -161 136 -9\n17 6 18 371 18 209 0 380 -4 380 -8z m1531 -10 c-22 -41 -100 -107 -161 -136\n-58 -27 -77 -31 -180 -34 -136 -5 -218 12 -292 60 -46 29 -118 102 -118 120 0\n4 171 8 380 8 365 0 380 -1 371 -18z"/> <path d="M2985 3415 c-16 -15 -25 -36 -25 -55 0 -19 9 -40 25 -55 l24 -25 271\n0 271 0 24 25 c16 15 25 36 25 55 0 19 -9 40 -25 55 l-24 25 -271 0 -271 0\n-24 -25z"/> <path d="M985 3655 c-16 -15 -25 -36 -25 -55 0 -19 9 -40 25 -55 l24 -25 271\n0 271 0 24 25 c16 15 25 36 25 55 0 19 -9 40 -25 55 l-24 25 -271 0 -271 0\n-24 -25z"/> <path d="M185 2935 c-16 -15 -25 -36 -25 -55 0 -19 9 -40 25 -55 l24 -25 271\n0 271 0 24 25 c33 32 33 78 0 110 l-24 25 -271 0 -271 0 -24 -25z"/> <path d="M185 1335 c-16 -15 -25 -36 -25 -55 0 -19 9 -40 25 -55 l24 -25 271\n0 271 0 24 25 c33 32 33 78 0 110 l-24 25 -271 0 -271 0 -24 -25z"/> </g> </svg> </div> <div class="finish_flag"></div> </div> </div> </div> '),r=n.querySelector("#car_img"),c=n.querySelector("#car_name"),l=n.querySelector("#carline_controls"),d=n.querySelector("#ufo");if(!(r instanceof SVGElement))throw new Error("can't find SVG picture");if(!(c instanceof HTMLDivElement))throw new Error("can't find DIV element for carname");if(!(l instanceof HTMLDivElement))throw new Error("can't find DIV element for car controls");if(!(d instanceof HTMLDivElement))throw new Error("can't find DIV element for ufo");var u;return a.inGame?(d.innerHTML="",d.append(a.carsHTML[t.id])):(d.setAttribute("id",`ufo-${t.id}`),d.dataset.carId=t.id.toString(),a.carsHTML[t.id]=d),l.append(...(u=t.id,a.controls[u].select=i("Select",{btnType:s.BtnSelectOne,carId:u,disabled:a.inGame}),a.controls[u].remove=i("Remove",{btnType:s.BtnRemoveOne,carId:u,disabled:a.inGame}),a.controls[u].start=i("Start",{btnType:s.BtnStartOne,carId:u,disabled:a.inGame}),a.controls[u].reset=i("Reset",{btnType:s.BtnResetOne,carId:u,disabled:!a.inGame}),[a.controls[u].select,a.controls[u].remove,a.controls[u].start,a.controls[u].reset])),r.setAttribute("fill",t.color),c.innerText=t.name,e&&e.length>0&&n.append(...e),n})(t)));return e.append(n,...r),t&&t.length>0&&e.prepend(...t),e},C=t=>{t.preventDefault();const e=document.querySelector("#app");if(!(e instanceof HTMLElement))throw new Error("Err");e.innerHTML="";const n=T();e.append(n)},S=(t,e)=>{const n=document.createElement("tr"),r=document.createElement("td"),a=document.createElement("td"),o=document.createElement("td"),s=document.createElement("td"),i=document.createElement("td"),c=document.createElementNS("http://www.w3.org/2000/svg","svg");return c.innerHTML='<g transform="translate(0.000000,512.000000) scale(0.100000,-0.100000)" stroke="none">\n<path d="M2736 3959 c-387 -59 -699 -317 -822 -677 -19 -54 -38 -131 -45 -173\nl-11 -76 -137 -6 c-151 -6 -219 -22 -327 -73 -245 -116 -410 -358 -431 -634\nl-6 -80 -54 0 c-44 0 -58 -5 -78 -25 -30 -29 -32 -74 -6 -106 16 -20 31 -25\n92 -29 l72 -5 18 -52 c69 -204 243 -387 443 -463 39 -16 96 -33 127 -39 55\n-12 56 -12 85 -74 65 -139 229 -260 388 -288 102 -17 295 -7 375 20 129 44\n243 142 304 258 l32 63 205 0 205 0 33 -64 c68 -131 213 -240 359 -271 81 -17\n246 -19 329 -4 32 6 92 26 132 45 94 43 193 140 242 236 35 67 35 68 90 79\n277 57 514 282 587 559 24 89 23 291 -1 379 -55 201 -194 378 -376 479 -81 45\n-211 82 -320 90 l-95 7 -7 59 c-50 395 -356 736 -758 843 -87 24 -115 26 -340\n29 -135 1 -272 -1 -304 -7z m605 -177 c308 -83 542 -317 620 -620 10 -41 19\n-88 19 -104 l0 -28 -981 0 -980 0 7 48 c3 26 19 88 35 137 80 253 292 466 547\n550 115 37 189 44 427 41 193 -3 242 -7 306 -24z m-1378 -1356 c67 -27 115\n-115 102 -184 -16 -88 -84 -146 -170 -146 -148 0 -229 171 -132 281 53 60 129\n79 200 49z m1077 -6 c54 -27 83 -72 88 -137 5 -64 -9 -103 -54 -143 -45 -39\n-102 -54 -154 -40 -48 13 -103 59 -120 100 -18 44 -8 130 19 169 48 67 145 90\n221 51z m1053 6 c44 -18 95 -78 103 -121 20 -111 -60 -209 -171 -209 -149 0\n-225 169 -127 286 46 55 126 73 195 44z m-1523 -934 c0 -18 -72 -91 -118 -120\n-74 -48 -156 -65 -292 -60 -103 3 -122 7 -180 34 -61 29 -139 95 -161 136 -9\n17 6 18 371 18 209 0 380 -4 380 -8z m1531 -10 c-22 -41 -100 -107 -161 -136\n-58 -27 -77 -31 -180 -34 -136 -5 -218 12 -292 60 -46 29 -118 102 -118 120 0\n4 171 8 380 8 365 0 380 -1 371 -18z"/>\n<path d="M2985 3415 c-16 -15 -25 -36 -25 -55 0 -19 9 -40 25 -55 l24 -25 271\n0 271 0 24 25 c16 15 25 36 25 55 0 19 -9 40 -25 55 l-24 25 -271 0 -271 0\n-24 -25z"/>\n<path d="M985 3655 c-16 -15 -25 -36 -25 -55 0 -19 9 -40 25 -55 l24 -25 271\n0 271 0 24 25 c16 15 25 36 25 55 0 19 -9 40 -25 55 l-24 25 -271 0 -271 0\n-24 -25z"/>\n<path d="M185 2935 c-16 -15 -25 -36 -25 -55 0 -19 9 -40 25 -55 l24 -25 271\n0 271 0 24 25 c33 32 33 78 0 110 l-24 25 -271 0 -271 0 -24 -25z"/>\n<path d="M185 1335 c-16 -15 -25 -36 -25 -55 0 -19 9 -40 25 -55 l24 -25 271\n0 271 0 24 25 c33 32 33 78 0 110 l-24 25 -271 0 -271 0 -24 -25z"/>\n</g>\n',c.setAttribute("fill",t.color.toString()),c.setAttribute("width","32px"),c.setAttribute("height","32px"),c.setAttribute("viewBox","0 0 512.000000 512.000000"),r.innerText=e.toString(),a.append(c),o.innerText=t.name,s.innerText=t.wins.toString(),i.innerText=t.time.toString(),o.classList.add("car_name"),n.append(r,a,o,s,i),n},M=async t=>{const{target:e}=t;if(!(e instanceof HTMLElement))throw new Error("Can't find sort TH");const o=e.id.slice(5),s=document.querySelector(`#sort_${a.sortWinners}`);if(!(s instanceof HTMLElement))throw new Error("Can't find thToRemoveClass");switch(s.classList.remove(`sort_${a.SortOrderWinners}`),o){case n.Wins:a.sortWinners=n.Wins;break;case n.Time:a.sortWinners=n.Time}a.SortOrderWinners===r.Desc?a.SortOrderWinners=r.Asc:a.SortOrderWinners=r.Desc,e.classList.add(`sort_${a.SortOrderWinners}`),await w();const i=document.querySelector("#table_winners_body");if(!(i instanceof HTMLElement))throw new Error("Can't find main section");i.innerHTML="";const c=a.winnersTable.map(((t,e)=>S(t,e+1+10*(a.currentWinnersPage-1))));console.log(...c),i.append(...c)},P=()=>{const t=o('<section id="winners" class="winners"></section> '),e=(t=>{const e=o('<table class="winners_table" id="winners_table"> <thead class="thead"> <th class="t_head_row">#</th> <th class="t_head_row">Car Image</th> <th class="t_head_row">Name</th> <th class="t_head_row sort_td" id="sort_wins">Wins</th> <th class="t_head_row sort_td" id="sort_time">Best time</th> </thead> <tbody id="table_winners_body"></tbody> </table> '),r=e.querySelector("#table_winners_body"),s=e.querySelector("#sort_wins"),i=e.querySelector("#sort_time");if(!(s instanceof HTMLTableCellElement&&i instanceof HTMLTableCellElement))throw new Error("Can't find TH wins element");if(a.sortWinners===n.Time&&i.classList.add(`sort_${a.SortOrderWinners}`),a.sortWinners===n.Wins&&s.classList.add(`sort_${a.SortOrderWinners}`),s.addEventListener("click",M),i.addEventListener("click",M),!(r instanceof HTMLElement))throw new Error("Can't find tBody for winners");const c=a.winnersTable.map(((t,e)=>S(t,e+1+10*(a.currentWinnersPage-1))));return r.append(...c),e})(),r=E({countTitleText:"Winners",storeField:"countWinners",storeFieldCurrentPage:"currentWinnersPage",storeFieldPages:"pagesCountWinner",btnPrevPageType:"BtnWinnerPrevPage",btnNextPageType:"BtnWinnerNextPage"});return t.append(r,e),t},_=t=>{t.preventDefault();const e=document.querySelector("#app");if(!(e instanceof HTMLElement))throw new Error("Err");e.innerHTML="";const n=P();e.append(n)},L=(t,e)=>Math.floor(Math.random()*(e-t+1)+t),H=t=>L(0,t),B=()=>{const t=["#"];for(let e=0;e<6;e+=1)t.push(L(0,14).toString(16));return t.join("")},x=async(t,e)=>{const n=`${u}?id=${t}&status=${e}`,r={id:t.toString(),status:e};try{return await c.patch(n,r).then((t=>t.json()))}catch(e){if(e instanceof Error)return"500"===e.message&&(a.carsRace[t]=!1),Promise.reject()}return t},I=t=>x(t,e.Started),R=t=>x(t,e.Stopped),G=t=>{const{target:e}=t;if(!(e instanceof HTMLButtonElement||e instanceof HTMLDivElement))throw new Error("Can't find close modal button");if("modalClose"===e.id||"modalOwerlay"===e.id){const t=e.closest("#modalWindow");if(!(t instanceof HTMLDivElement))throw new Error("Can't find main modal DIV");const n=t.parentElement;n instanceof HTMLElement&&n.firstChild?.remove(),document.body.classList.remove("stop-scrolling")}},W=async n=>{n.preventDefault(),a.editorCar.btnStartRace?.setAttribute("disabled","disabled"),a.cars.forEach((t=>{v(t.id)})),a.inGame=!0,await(async()=>{try{const r=a.cars.map((t=>I(t.id))),o=await Promise.all(r);let s=0;a.cars.forEach((t=>{a.carsRace[t.id]=!0,a.carsRaceTime[t.id]=o[s].distance/o[s].velocity,b(a.carsHTML[t.id],a.carsRaceTime[t.id]),s+=1})),a.editorCar.btnResetRace?.removeAttribute("disabled");const i=a.cars.map((t=>(async t=>{const n=await x(t,e.Drive);return n.success?t:n})(t.id))),l=await Promise.any(i),d=await h(l),u=(n=a.carsRaceTime[l],parseInt(n.toString(),10)/1e3);if(a.lastWinner={id:l,time:u},-1===d.id){const t={wins:1,time:u,id:l};await(async t=>{const e=await c.post(m,t);let n={id:-1,wins:0,time:0};return"object"==typeof e&&(n=Object(e)),n})(t)}else d.wins+=1,d.time>u&&(d.time=u),await(async e=>{const n=`${m}/${e.id}`,r={method:t.Put},{wins:a,time:o,id:s}=e,i={id:s,wins:a,time:o};let l={time:0,wins:0,id:0};if(await h(e.id)){const t=await c.put(n,i,r);"object"==typeof t&&(l=Object(t))}return l})(d),a.inGame=!1;return await w(),i}catch(t){return t instanceof Error?"nobody wins":Promise.reject(new Error("Cant resolve promise"))}var n})();const r=(t=>{const e=o('<div class="modalWindow" id="modalWindow"> <div class="modalOwerlay" id="modalOwerlay"> <div class="modalBody"> <h3 class="modalTitle" id="modalTitle">Победитель</h3> <div class="modalText" id="modalText">With time:<span id="winTime"></span></div> <button class="btn" id="modalClose">ok</button> </div> </div> </div> '),{title:n,text:r}=t,a=e.querySelector("#modalOwerlay"),s=e.querySelector("#modalTitle"),i=e.querySelector("#modalText"),c=e.querySelector("#modalClose");if(!(a instanceof HTMLDivElement))throw new Error("Can't find close modal overlay DIV");if(!(s instanceof HTMLElement&&i instanceof HTMLDivElement))throw new Error("Can't find modal title or text");if(!(c instanceof HTMLButtonElement))throw new Error("Can't find close modal button");return a.addEventListener("click",G),c.addEventListener("click",G),s.innerText=n,i.innerHTML=r,document.body.classList.add("stop-scrolling"),e})({title:`Congratulations: ${a.cars.filter((t=>t.id===a.lastWinner.id))[0].name}`,text:`Win in ${a.lastWinner.time} seconds!`});document.body.prepend(r)},D={BtnStartOne:t=>(async t=>{const{target:e}=t;if(!(e instanceof HTMLButtonElement))throw new Error("Can't find button element Start");const n=document.querySelector(`#ufo-${e.dataset.carId}`);if(!(n instanceof HTMLElement))throw new Error("err");const{carId:r}=e.dataset;if(r){const t=parseInt(r,10);v(t);const e=await I(t);a.carsRace[t]=!0,a.carsRaceTime[t]=e.distance/e.velocity,b(n,a.carsRaceTime[t])}})(t),BtnResetOne:t=>(async t=>{const{target:e}=t;if(!(e instanceof HTMLButtonElement))throw new Error("Can't find button element Start");const{carId:n}=e.dataset;if(n){const t=parseInt(n,10);await R(t),a.carsRace[t]=!1,setTimeout((()=>{a.carsHTML[t].style.transform="translate(0)"}),50),y(t)}console.log("StopOneCar click")})(t),BtnRemoveOne:e=>(async e=>{const{target:n}=e;if(!(n instanceof HTMLButtonElement))throw new Error("Can't find button element Remove");const{carId:r}=n.dataset;if(r){const e=parseInt(r,10);await(async e=>{const n=`${d}/${e}`,r={method:t.Delete};await p(e)&&await c.delete(n,r)})(e),-1!==(await h(e)).id&&(await(async e=>{const n=`${m}/${e}`,r={method:t.Delete};(await h(e)).id&&await c.delete(n,r)})(parseInt(r,10)),w())}await g(),console.log(a);const o=document.querySelector("#app");if(!(o instanceof HTMLElement))throw new Error("Can't find button element Main app");o.innerHTML="",o.append(T())})(e),BtnSelectOne:t=>(t=>{const{target:e}=t;if(!(e instanceof HTMLButtonElement))throw new Error("Can't find button element Select");const{carId:n}=e.dataset;if(n){const t=parseInt(n,10),e=a.cars.filter((e=>e.id===t))[0];a.editorCar.carEditId=t,a.editorCar.formInputEdit?.removeAttribute("disabled");const{formInputEdit:r}=a.editorCar,{inputColorEdit:o}=a.editorCar;if(!(r instanceof HTMLInputElement&&o instanceof HTMLInputElement))throw new Error("Can't load form editor");a.editorCar.inputColorEdit?.removeAttribute("disabled"),a.editorCar.btnEditorUpdate?.removeAttribute("disabled"),r.value=e.name,r.focus(),o.value=e.color}})(t),BtnAdd100Cars:t=>(async t=>{t.preventDefault(),await(async t=>{const e=[];for(let t=0;t<100;t+=1){const t=a.carsBrands[H(a.carsBrands.length-1)],n=a.carsModels[H(a.carsModels.length-1)],r=B();e.push({name:`${t} ${n}`,color:r})}const n=e.map((t=>f(t)));await Promise.allSettled(n)})(),await g();const e=T(),n=document.querySelector("#app");if(!(n instanceof HTMLElement))throw new Error("Can't find main section");n.innerHTML="",n.append(e),console.log("log",a.countCars)})(t),BtnStartRace:t=>W(t),BtnResetRace:t=>(async t=>{t.preventDefault();const{target:e}=t;if(!(e instanceof HTMLButtonElement))throw new Error("Can't find button element Reset");a.cars.forEach((async t=>{t.id&&(await R(t.id),a.carsRace[t.id]=!1,setTimeout((()=>{a.carsHTML[t.id].style.transform="translate(0)"}),50),y(t.id))})),a.editorCar.btnResetRace?.setAttribute("disabled","disabled"),a.editorCar.btnStartRace?.removeAttribute("disabled")})(t),BtnCreateCar:t=>(async t=>{t.preventDefault();const e=a.editorCar.formInputCreate?.value,n=a.editorCar.inputColorCreate?.value;e&&n&&await f({name:e,color:n}),await g();const r=T(),o=document.querySelector("#app");if(!(o instanceof HTMLElement))throw new Error("Can't find main section");o.innerHTML="",o.append(r)})(t),BtnUpdateEdit:e=>(async e=>{e.preventDefault();const n=a.editorCar.carEditId,r=a.editorCar.formInputEdit?.value,o=a.editorCar.inputColorEdit?.value;r&&o&&await(async e=>{const n=`${d}/${e.id}`,r={method:t.Put},{name:a,color:o,id:s}=e,i={name:a,color:o,id:s};let l={id:-1,name:"unknown",color:"unknown"};if(await p(e.id)){const t=await c.put(n,i,r);"object"==typeof t&&(l=Object(t))}return l})({id:n,name:r,color:o}),await g();const s=T(),i=document.querySelector("#app");if(!(i instanceof HTMLElement))throw new Error("Can't find main section");i.innerHTML="",i.append(s)})(e),BtnGarageNextPage:t=>(async t=>{if(t.preventDefault(),console.log("next"),!1===a.inGame&&a.currentGaragePage<a.pagesCountGarage){a.currentGaragePage+=1,await g();const t=T(),e=document.querySelector("#app");if(!(e instanceof HTMLElement))throw new Error("Can't find main section");e.innerHTML="",e.append(t)}})(t),BtnGaragePrevPage:t=>(async t=>{if(t.preventDefault(),console.log("prev"),!1===a.inGame&&a.currentGaragePage>1){a.currentGaragePage-=1,await g();const t=T(),e=document.querySelector("#app");if(!(e instanceof HTMLElement))throw new Error("Can't find main section");e.innerHTML="",e.append(t)}})(t),BtnWinnerNextPage:t=>(async t=>{if(t.preventDefault(),console.log("next"),a.currentWinnersPage<a.pagesCountWinner){a.currentWinnersPage+=1,await w();const t=P(),e=document.querySelector("#app");if(!(e instanceof HTMLElement))throw new Error("Can't find main section");e.innerHTML="",e.append(t)}})(t),BtnWinnerPrevPage:t=>(async t=>{if(t.preventDefault(),a.currentWinnersPage>1){a.currentWinnersPage-=1,await w();const t=P(),e=document.querySelector("#app");if(!(e instanceof HTMLElement))throw new Error("Can't find main section");e.innerHTML="",e.append(t)}})(t)},z=t=>{const{target:e}=t;if(e instanceof HTMLButtonElement){const{btnType:n}=e.dataset;n&&D[n](t)}};document.addEventListener("DOMContentLoaded",(async()=>{await g(),console.log(a);const t=T();document.body.append((()=>{const t=o('<header class="header"> <div class="container"> <div class="logo"> <svg version="1.0" xmlns="http://www.w3.org/2000/svg" width="48.000000pt" height="48.000000pt" viewBox="0 0 512.000000 512.000000" preserveAspectRatio="xMidYMid meet"> <g transform="translate(0.000000,512.000000) scale(0.100000,-0.100000)"> <path d="M2366 4270 c-92 -15 -239 -56 -329 -94 -189 -78 -351 -190 -503 -348\n-346 -360 -452 -783 -339 -1345 69 -340 239 -691 480 -990 193 -241 489 -485\n725 -601 84 -42 103 -47 160 -47 53 1 79 7 140 36 246 116 540 359 753 624\n235 292 404 640 471 977 113 560 8 984 -334 1342 -203 212 -429 346 -708 418\n-103 26 -137 30 -287 33 -93 2 -196 0 -229 -5z m-721 -1151 c265 -33 458 -136\n571 -306 74 -112 130 -304 135 -468 6 -188 2 -195 -139 -195 -184 0 -374 47\n-501 124 -210 128 -331 383 -331 701 0 116 5 131 50 148 25 9 121 7 215 -4z\nm2076 -18 c16 -20 19 -40 19 -131 0 -312 -122 -569 -331 -696 -127 -77 -317\n-124 -501 -124 -115 0 -131 10 -142 82 -10 66 12 259 40 358 77 266 249 434\n509 500 109 27 204 39 303 37 75 -2 86 -5 103 -26z m-1401 -1396 c172 -86 314\n-86 486 1 66 34 73 35 100 23 36 -18 52 -59 36 -94 -14 -31 -167 -107 -250\n-124 -84 -17 -208 -14 -290 9 -101 28 -210 84 -224 116 -15 33 0 75 32 91 34\n17 31 18 110 -22z"/> <path class="alien" d="M1523 2898 c8 -102 46 -240 88 -319 86 -161 272 -263 519 -285 l83\n-7 -6 90 c-7 101 -45 243 -85 318 -37 68 -134 164 -207 202 -83 44 -192 72\n-304 80 l-94 6 6 -85z"/> <path class="alien" d="M3421 2969 c-76 -13 -184 -52 -248 -91 -150 -90 -244 -271 -260 -503\nl-6 -85 34 0 c64 0 219 30 286 55 223 84 345 268 369 556 l7 79 -64 -1 c-35\n-1 -88 -5 -118 -10z"/> </g> </svg> <a class="header_link" href="https://rolling-scopes-school.github.io/dudarik-JSFE2022Q3/async-race/"> <h1 class="main_title">x-com race</h1> </a> </div> <menu class="menu"> <button class="btn" id="btnToWinners">To Winners</button> <button class="btn" id="btnToGarage">To Garage</button> </menu> </div> </header> '),e=t.querySelector("#btnToWinners"),n=t.querySelector("#btnToGarage");return e?.addEventListener("click",_),n?.addEventListener("click",C),t})()),document.body.append((t=>{const e=o('<main id="app" class="main"></main> ');return e.addEventListener("click",z),t&&t.length>0&&e.append(...t),e})([t])),document.body.append(o('<footer class="footer"> <a href="https://github.com/Dudarik"> <svg xmlns="http://www.w3.org/2000/svg" width="64" height="64" viewBox="0 0 24 24"> <path d="M19 0h-14c-2.761 0-5 2.239-5 5v14c0 2.761 2.239 5 5 5h14c2.762 0 5-2.239 5-5v-14c0-2.761-2.238-5-5-5zm-4.466 19.59c-.405.078-.534-.171-.534-.384v-2.195c0-.747-.262-1.233-.55-1.481 1.782-.198 3.654-.875 3.654-3.947 0-.874-.312-1.588-.823-2.147.082-.202.356-1.016-.079-2.117 0 0-.671-.215-2.198.82-.64-.18-1.324-.267-2.004-.271-.68.003-1.364.091-2.003.269-1.528-1.035-2.2-.82-2.2-.82-.434 1.102-.16 1.915-.077 2.118-.512.56-.824 1.273-.824 2.147 0 3.064 1.867 3.751 3.645 3.954-.229.2-.436.552-.508 1.07-.457.204-1.614.557-2.328-.666 0 0-.423-.768-1.227-.825 0 0-.78-.01-.055.487 0 0 .525.246.889 1.17 0 0 .463 1.428 2.688.944v1.489c0 .211-.129.459-.528.385-3.18-1.057-5.472-4.056-5.472-7.59 0-4.419 3.582-8 8-8s8 3.581 8 8c0 3.533-2.289 6.531-5.466 7.59z"/> </svg> </a> <div class="copyright">2023</div> <a href="https://rs.school/"> <svg id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 552.8 205.3" width="128" height="64"> <style>.st0{fill:#fff}.st1{clip-path:url(#SVGID_2_)}.st2{clip-path:url(#SVGID_4_)}.st3{clip-path:url(#SVGID_6_)}.st4{clip-path:url(#SVGID_8_)}.st5{fill:#fff;stroke:#000;stroke-width:4;stroke-miterlimit:10}.st6{clip-path:url(#SVGID_8_)}.st6,.st7{fill:none;stroke:#000;stroke-width:4;stroke-miterlimit:10}.st8,.st9{clip-path:url(#SVGID_10_)}.st9{fill:none;stroke:#000;stroke-width:4;stroke-miterlimit:10}</style> <title>rs_school_js</title> <path d="M285.4 68l26.3-1.7c.6 4.3 1.7 7.5 3.5 9.8 2.9 3.6 6.9 5.4 12.2 5.4 3.9 0 7-.9 9.1-2.8 2-1.5 3.2-3.9 3.2-6.4 0-2.4-1.1-4.7-3-6.2-2-1.8-6.7-3.6-14.1-5.2-12.1-2.7-20.8-6.3-25.9-10.9-5.1-4.3-8-10.6-7.8-17.3 0-4.6 1.4-9.2 4-13 3-4.3 7.1-7.7 12-9.6 5.3-2.3 12.7-3.5 22-3.5 11.4 0 20.1 2.1 26.1 6.4 6 4.2 9.6 11 10.7 20.3l-26 1.5c-.7-4-2.1-6.9-4.4-8.8s-5.3-2.8-9.2-2.8c-3.2 0-5.6.7-7.2 2-1.5 1.2-2.5 3-2.4 5 0 1.5.8 2.9 2 3.8 1.3 1.2 4.4 2.3 9.3 3.3 12.1 2.6 20.7 5.2 26 7.9 5.3 2.7 9.1 6 11.4 9.9 2.4 4 3.6 8.6 3.5 13.3 0 5.6-1.6 11.2-4.8 15.9-3.3 4.9-7.9 8.7-13.3 11-5.7 2.5-12.9 3.8-21.5 3.8-15.2 0-25.7-2.9-31.6-8.8S286.1 77 285.4 68zM6.3 97.6V8.2h46.1c8.5 0 15.1.7 19.6 2.2 4.4 1.4 8.3 4.3 10.9 8.2 2.9 4.3 4.3 9.3 4.2 14.5.3 8.8-4.2 17.2-11.9 21.6-3 1.7-6.3 2.9-9.7 3.5 2.5.7 5 1.9 7.2 3.3 1.7 1.4 3.1 3 4.4 4.7 1.5 1.7 2.8 3.6 3.9 5.6l13.4 25.9H63L48.2 70.2c-1.9-3.5-3.5-5.8-5-6.9-2-1.4-4.4-2.1-6.8-2.1H34v36.3H6.3zM34 44.4h11.7c2.5-.2 4.9-.6 7.3-1.2 1.8-.3 3.4-1.3 4.5-2.8 2.7-3.6 2.3-8.7-1-11.8-1.8-1.5-5.3-2.3-10.3-2.3H34v18.1zM0 174.2l26.3-1.7c.6 4.3 1.7 7.5 3.5 9.8 2.8 3.6 6.9 5.5 12.2 5.5 3.9 0 7-.9 9.1-2.8 2-1.6 3.2-3.9 3.2-6.4 0-2.4-1.1-4.7-3-6.2-2-1.8-6.7-3.6-14.2-5.2-12.1-2.7-20.8-6.3-25.9-10.9-5.1-4.3-8-10.6-7.8-17.3 0-4.6 1.4-9.2 4-13 3-4.3 7.1-7.7 12-9.6 5.3-2.3 12.7-3.5 22-3.5 11.4 0 20.1 2.1 26.1 6.4s9.5 11 10.6 20.3l-26 1.5c-.7-4-2.1-6.9-4.4-8.8-2.2-1.9-5.3-2.8-9.2-2.7-3.2 0-5.6.7-7.2 2.1-1.6 1.2-2.5 3-2.4 5 0 1.5.8 2.9 2 3.8 1.3 1.2 4.4 2.3 9.3 3.3 12.1 2.6 20.7 5.2 26 7.9 5.3 2.7 9.1 6 11.4 9.9 2.4 4 3.6 8.6 3.6 13.2 0 5.6-1.7 11.1-4.8 15.8-3.3 4.9-7.9 8.7-13.3 11-5.7 2.5-12.9 3.8-21.5 3.8-15.2 0-25.7-2.9-31.6-8.8-5.9-6-9.2-13.4-10-22.4z"/> <path d="M133 167.2l24.2 7.3c-1.3 6.1-4 11.9-7.7 17-3.4 4.5-7.9 8-13 10.3-5.2 2.3-11.8 3.5-19.8 3.5-9.7 0-17.7-1.4-23.8-4.2-6.2-2.8-11.5-7.8-16-14.9-4.5-7.1-6.7-16.2-6.7-27.3 0-14.8 3.9-26.2 11.8-34.1s19-11.9 33.4-11.9c11.3 0 20.1 2.3 26.6 6.8 6.4 4.6 11.2 11.6 14.4 21l-24.4 5.4c-.6-2.1-1.5-4.2-2.7-6-1.5-2.1-3.4-3.7-5.7-4.9-2.3-1.2-4.9-1.7-7.5-1.7-6.3 0-11.1 2.5-14.4 7.6-2.5 3.7-3.8 9.6-3.8 17.6 0 9.9 1.5 16.7 4.5 20.4 3 3.7 7.2 5.5 12.7 5.5 5.3 0 9.3-1.5 12-4.4 2.7-3.1 4.7-7.4 5.9-13zm56.5-52.8h27.6v31.3h30.2v-31.3h27.8v89.4h-27.8v-36.2h-30.2v36.2h-27.6v-89.4z"/> <path d="M271.3 159.1c0-14.6 4.1-26 12.2-34.1 8.1-8.1 19.5-12.2 34-12.2 14.9 0 26.3 4 34.4 12S364 144 364 158.4c0 10.5-1.8 19-5.3 25.7-3.4 6.6-8.7 12-15.2 15.6-6.7 3.7-15 5.6-24.9 5.6-10.1 0-18.4-1.6-25-4.8-6.8-3.4-12.4-8.7-16.1-15.2-4.1-7-6.2-15.7-6.2-26.2zm27.6.1c0 9 1.7 15.5 5 19.5 3.3 3.9 7.9 5.9 13.7 5.9 5.9 0 10.5-1.9 13.8-5.8s4.9-10.8 4.9-20.8c0-8.4-1.7-14.6-5.1-18.4-3.4-3.9-8-5.8-13.8-5.8-5.1-.2-10 2-13.4 5.9-3.4 3.9-5.1 10.4-5.1 19.5zm93.4-.1c0-14.6 4.1-26 12.2-34.1 8.1-8.1 19.5-12.2 34-12.2 14.9 0 26.4 4 34.4 12S485 144 485 158.4c0 10.5-1.8 19-5.3 25.7-3.4 6.6-8.7 12-15.2 15.6-6.7 3.7-15 5.6-24.9 5.6-10.1 0-18.4-1.6-25-4.8-6.8-3.4-12.4-8.7-16.1-15.2-4.1-7-6.2-15.7-6.2-26.2zm27.6.1c0 9 1.7 15.5 5 19.5 3.3 3.9 7.9 5.9 13.7 5.9 5.9 0 10.5-1.9 13.8-5.8 3.3-3.9 4.9-10.8 4.9-20.8 0-8.4-1.7-14.6-5.1-18.4-3.4-3.9-8-5.8-13.8-5.8-5.1-.2-10.1 2-13.4 5.9-3.4 3.9-5.1 10.4-5.1 19.5z"/> <path d="M482.1 114.4h27.6v67.4h43.1v22H482v-89.4z"/> <ellipse transform="rotate(-37.001 420.46 67.88)" class="st0" cx="420.5" cy="67.9" rx="63" ry="51.8"/> <defs> <ellipse id="SVGID_1_" transform="rotate(-37.001 420.46 67.88)" cx="420.5" cy="67.9" rx="63" ry="51.8"/> </defs> <clipPath id="SVGID_2_"><use xlink:href="#SVGID_1_" overflow="visible"/></clipPath> <g class="st1"> <path transform="rotate(-37.001 420.82 68.353)" class="st0" d="M330.9-14.2h179.8v165.1H330.9z"/> <g id="Layer_2_1_"> <defs> <path id="SVGID_3_" transform="rotate(-37.001 420.82 68.353)" d="M330.9-14.2h179.8v165.1H330.9z"/> </defs> <clipPath id="SVGID_4_"><use xlink:href="#SVGID_3_" overflow="visible"/></clipPath> <g id="Layer_1-2" class="st2"> <ellipse transform="rotate(-37.001 420.46 67.88)" class="st0" cx="420.5" cy="67.9" rx="63" ry="51.8"/> <defs> <ellipse id="SVGID_5_" transform="rotate(-37.001 420.46 67.88)" cx="420.5" cy="67.9" rx="63" ry="51.8"/> </defs> <clipPath id="SVGID_6_"><use xlink:href="#SVGID_5_" overflow="visible"/></clipPath> <g class="st3"> <path transform="rotate(-37 420.799 68.802)" class="st0" d="M357.8 17h125.9v103.7H357.8z"/> <defs> <path id="SVGID_7_" transform="rotate(-37 420.799 68.802)" d="M357.8 17h125.9v103.7H357.8z"/> </defs> <clipPath id="SVGID_8_"><use xlink:href="#SVGID_7_" overflow="visible"/></clipPath> <g class="st4"> <ellipse transform="rotate(-37.001 420.46 67.88)" class="st5" cx="420.5" cy="67.9" rx="63" ry="51.8"/> </g> <path transform="rotate(-37 420.799 68.802)" class="st6" d="M357.8 17h125.9v103.7H357.8z"/> <ellipse transform="rotate(-37.001 420.46 67.88)" class="st7" cx="420.5" cy="67.9" rx="63" ry="51.8"/> <path transform="rotate(-37 420.799 68.802)" class="st0" d="M357.8 17h125.9v103.7H357.8z"/> <defs> <path id="SVGID_9_" transform="rotate(-37 420.799 68.802)" d="M357.8 17h125.9v103.7H357.8z"/> </defs> <clipPath id="SVGID_10_"><use xlink:href="#SVGID_9_" overflow="visible"/></clipPath> <g class="st8"> <ellipse transform="rotate(-37.001 420.46 67.88)" class="st5" cx="420.5" cy="67.9" rx="63" ry="51.8"/> </g> <path transform="rotate(-37 420.799 68.802)" class="st9" d="M357.8 17h125.9v103.7H357.8z"/> <path transform="rotate(-37.001 420.82 68.353)" class="st7" d="M330.9-14.2h179.8v165.1H330.9z"/> </g> <ellipse transform="rotate(-37.001 420.46 67.88)" class="st7" cx="420.5" cy="67.9" rx="63" ry="51.8"/> <path d="M392.4 61.3l10-7 12.3 17.5c2.1 2.8 3.7 5.8 4.9 9.1.7 2.5.5 5.2-.5 7.6-1.3 3-3.4 5.5-6.2 7.3-3.3 2.3-6.1 3.6-8.5 4-2.3.4-4.7 0-6.9-1-2.4-1.2-4.5-2.9-6.1-5.1l8.6-8c.7 1.1 1.6 2.1 2.6 2.9.7.5 1.5.8 2.4.8.7 0 1.4-.3 1.9-.7 1-.6 1.7-1.8 1.6-3-.3-1.7-1-3.4-2.1-4.7l-14-19.7zm30 11.1l9.1-7.2c1 1.2 2.3 2.1 3.7 2.6 2 .6 4.1.2 5.8-1.1 1.2-.8 2.2-1.9 2.6-3.3.6-1.8-.4-3.8-2.2-4.4-.3-.1-.6-.2-.9-.2-1.2-.1-3.3.4-6.4 1.7-5.1 2.1-9.1 2.9-12.1 2.6-2.9-.3-5.6-1.8-7.2-4.3-1.2-1.7-1.8-3.7-1.9-5.7 0-2.3.6-4.6 1.9-6.5 1.9-2.7 4.2-5 7-6.8 4.2-2.9 7.9-4.3 11.1-4.3 3.2 0 6.2 1.5 9 4.6l-9 7.1c-1.8-2.3-5.2-2.8-7.5-1l-.3.3c-1 .6-1.7 1.5-2.1 2.6-.3.8-.1 1.7.4 2.4.4.5 1 .9 1.7.9.8.1 2.2-.3 4.2-1.2 5-2.1 8.8-3.3 11.4-3.7 2.2-.4 4.5-.2 6.6.7 1.9.8 3.5 2.2 4.6 3.9 1.4 2 2.2 4.4 2.3 6.9.1 2.6-.6 5.1-2 7.3-1.8 2.7-4.1 5-6.8 6.8-5.5 3.8-10 5.4-13.6 4.8-3.9-.6-7.1-2.6-9.4-5.5z"/> </g> </g> </g> </svg> </a> </footer> '))}))})();