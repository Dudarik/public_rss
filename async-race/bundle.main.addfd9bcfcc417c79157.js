(()=>{"use strict";var t,e,n,r;!function(t){t.Get="GET",t.Post="POST",t.Delete="DELETE",t.Put="PUT",t.Patch="PATCH"}(t||(t={})),function(t){t.Started="started",t.Stopped="stopped",t.Drive="drive"}(e||(e={})),function(t){t.Id="id",t.Wins="wins",t.Time="time"}(n||(n={})),function(t){t.Asc="ASC",t.Desc="DESC"}(r||(r={}));const a={cars:[],countCars:0,countWinners:0,carsRaceTime:{},carsRace:{},carsHTML:{},editorCar:{carEditId:-1,formInputCreate:null,formInputEdit:null,inputColorCreate:null,inputColorEdit:null,btnEditorUpdate:null,btnEditorCreate:null,btnStartRace:null,btnResetRace:null,btnGaragePrevPage:null,btnGarageNextPage:null},controls:{},renderPosition:{},inGame:!1,currentGaragePage:1,pagesCountGarage:0,carsPerPage:7,currentWinnersPage:1,winnerPerPage:10,pagesCountWinner:0,sortWinners:n.Wins,SortOrderWinners:r.Desc,winnersTable:[],carsBrands:["Chrysler","Dodge","Jeep","Ram","Ford","Lincoln","Cadillac","Chevrolet","Tesla","Audi","BMW","Daimler","Lotec","Mercedes","Vauxhall","Volkswagen","AZLK","Lada","Moskvitch","Volga"],carsModels:["A3","Sandero","2106","RS","e-tron","TTS","Golf","Bulldog","Pagoda","DB7","LeMans","Aspen","Cordoba","Crossfire","Concorde","Stratus","Viper"]},o=t=>{const e=document.createElement("template");if(e.innerHTML=t,!e.content.firstElementChild)throw new Error("Can't create element");return e.content.firstElementChild};var i;!function(t){t.BtnStartOne="BtnStartOne",t.BtnRemoveOne="BtnRemoveOne",t.BtnResetOne="BtnResetOne",t.BtnSelectOne="BtnSelectOne",t.BtnCreateCar="BtnCreateCar",t.BtnUpdateEdit="BtnUpdateEdit",t.BtnAdd100Cars="BtnAdd100Cars",t.BtnStartRace="BtnStartRace",t.BtnResetRace="BtnResetRace",t.BtnGaragePrevPage="BtnGaragePrevPage",t.BtnGarageNextPage="BtnGarageNextPage",t.BtnWinnerPrevPage="BtnWinnerPrevPage",t.BtnWinnerNextPage="BtnWinnerNextPage"}(i||(i={}));const s=(t,e)=>{const{btnType:n,handler:r,carId:a}=e,o=document.createElement("button");return o.innerText=t,o.classList.add("btn"),o.dataset.btnType=n,"function"==typeof r&&o.addEventListener("click",r),a&&(o.dataset.carId=a.toString()),o},c=async(e,n)=>{const{body:r,...a}=n;if("object"!=typeof r&&void 0!==r)throw new Error("Body must be an object {name: string; color: string;} or undefined");const o={method:r?t.Post:t.Get,...a,headers:{"Content-type":"application/json"}};"object"==typeof a.headers&&Object.assign(o.headers,a.headers),r&&(o.body=JSON.stringify(r));try{const t=await fetch(e,o);if(!t.ok)throw new Error(t.status.toString());return t}catch(t){return t instanceof Error?Promise.reject(t):Promise.reject(new Error("Cant resolve promise"))}};c.get=async function(t,e={}){return await c(t,e)},c.post=function(t,e,n={}){return c(t,{body:e,...n})},c.delete=function(e,n={}){return c(e,{method:t.Delete,...n})},c.put=function(e,n,r={}){return c(e,{body:n,method:t.Put,...r})},c.patch=function(e,n,r={}){return c(e,{body:n,method:t.Patch,...r})};const d="http://127.0.0.1:3000",l=`${d}/garage`,u=`${d}/engine`,p=`${d}/winners`,m=async t=>{const e=`${l}/${t}`,n=await c.get(e);if(!n)throw new Error(`Can't get car with id=${t}`);return Object(n.json())},f=async t=>{const e=await c.post(l,t);let n={id:-1,name:"unknown",color:"unknown"};return"object"==typeof e&&(n=Object(e)),n},g=async t=>{const e=`${p}/${t}`;let n={id:-1,wins:0,time:0};try{const t=await c.get(e).then((t=>t.json()));n=Object(t)}catch(t){return n}return n},b=async()=>{const{winners:t,countWinners:e}=await(async(t,e,n,r)=>{const a=`${p}?_page=${t}&_limit=${e}&_sort=${n}&_order=${r}`,o={headers:{"X-Total-Count":e.toString()}};let i=[];const s=await c.get(a,o),d=s.headers.get("X-Total-Count");let l=0;const u=await s.json();return d&&(l=parseInt(d,10)),console.log(u),Array.isArray(u)&&(i=Array.from(u)),{countWinners:l,winners:i}})(a.currentWinnersPage,a.winnerPerPage,a.sortWinners,a.SortOrderWinners);a.countWinners=e,a.pagesCountWinner=Math.ceil(e/a.winnerPerPage);const n=t.map((t=>m(t.id))),r=await Promise.all(n);a.winnersTable=t.map((t=>Object.assign(t,r.filter((e=>e.id===t.id))[0])))},w=async()=>{const{cars:t,countCars:e}=await(async(t,e)=>{const n=`${l}?_page=${t}&_limit=${e}`,r={headers:{"X-Total-Count":e.toString()}};let a=[];const o=await c.get(n,r),i=o.headers.get("X-Total-Count");let s=0;i&&(s=parseInt(i,10));const d=await o.json();return Array.isArray(d)&&(a=Array.from(d)),{countCars:s,cars:a}})(a.currentGaragePage,a.carsPerPage);a.cars=t,a.countCars=e,a.pagesCountGarage=Math.ceil(e/a.carsPerPage),b(),(()=>{for(let t=0;t<a.cars.length;t+=1)a.carsRace[a.cars[t].id]=!1})(),(()=>{for(let t=0;t<a.cars.length;t+=1)a.controls[a.cars[t].id]={remove:null,reset:null,select:null,start:null}})()},h=(t,e)=>{const n=performance.now();let r=-1;void 0!==t.dataset.carId&&(r=parseInt(t.dataset.carId,10)),requestAnimationFrame((function o(i){const s=(i-n)/e;t.style.transform=`translate(${90*s}%)`,s<1&&a.carsRace[r]&&requestAnimationFrame(o)}))},y=t=>{a.controls[t].remove?.setAttribute("disabled","disabled"),a.controls[t].start?.setAttribute("disabled","disabled"),a.controls[t].select?.setAttribute("disabled","disabled")},E=t=>{a.controls[t].remove?.removeAttribute("disabled"),a.controls[t].start?.removeAttribute("disabled"),a.controls[t].select?.removeAttribute("disabled")},C=t=>{const e=o('<div class="infoAndNav"> <h2 class="info_title"><span id="countRecordsTitle"></span>: <span id="countRecords"></span></h2> <h3 class="info_Subtitle">Page: <span id="currentPage"></span> (<span id="pages"></span>)</h3> <div class="btns"> <button data-btn-type="" id="btnPrevPage" class="btn">Prev page</button><button data-btn-type="" id="btnNextPage" class="btn">Next page</button> </div> </div> '),{countTitleText:n,storeField:r,storeFieldCurrentPage:i,storeFieldPages:s,btnPrevPageType:c,btnNextPageType:d}=t,l=e.querySelector("#countRecordsTitle"),u=e.querySelector("#countRecords"),p=e.querySelector("#currentPage"),m=e.querySelector("#pages"),f=e.querySelector("#btnPrevPage"),g=e.querySelector("#btnNextPage");if(!(l instanceof HTMLSpanElement&&u instanceof HTMLSpanElement&&p instanceof HTMLSpanElement&&m instanceof HTMLSpanElement))throw new Error("Can't find span for info");if(!(f instanceof HTMLButtonElement&&g instanceof HTMLButtonElement))throw new Error("Can't find buttons for Nav");return f.dataset.btnType=c,g.dataset.btnType=d,l.innerText=n,u.innerText=a[r].toString(),p.innerText=a[i].toString(),m.innerText=a[s].toString(),e},v=t=>{const e=o('<section id="garage" class="garage"></section> '),n=(t=>{const e=o('<form id="editor_form" class="editor_form"> <div class="create_car"> <input type="text" class="input_text-editor" id="inputCreate" placeholder="Input car name"/><input type="color" class="input_color-editor" id="inputColorCreate"/><button class="btn" id="btnEditorCreate" data-btn-type="BtnCreateCar"> Create </button> </div> <div class="update_car"> <input type="text" class="input_text-editor" id="inputEdit" placeholder="Select car" disabled="disabled"/><input type="color" class="input_color-editor" id="inputColorEdit" disabled="disabled"/><button class="btn" id="btnEditorUpdate" data-btn-type="BtnUpdateEdit" disabled="disabled"> Update </button> </div> <div class="control_race_bnts"> <button class="btn" id="btnGenerate100" data-btn-type="BtnAdd100Cars">Generate 100</button> <button class="btn" id="btnStartRace" data-btn-type="BtnStartRace">Start</button> <button class="btn" id="btnResetRace" data-btn-type="BtnResetRace" disabled="disabled">Reset</button> </div> </form> ');t&&t.length>0&&e.append(...t);const n=C({countTitleText:"Garage",storeField:"countCars",storeFieldCurrentPage:"currentGaragePage",storeFieldPages:"pagesCountGarage",btnPrevPageType:"BtnGaragePrevPage",btnNextPageType:"BtnGarageNextPage"});return e.append(n),(t=>{const e=t.querySelector("#inputCreate"),n=t.querySelector("#inputEdit"),r=t.querySelector("#inputColorCreate"),o=t.querySelector("#inputColorEdit"),i=t.querySelector("#btnEditorUpdate"),s=t.querySelector("#btnEditorCreate"),c=t.querySelector("#btnStartRace"),d=t.querySelector("#btnResetRace");if(!(e instanceof HTMLInputElement&&n instanceof HTMLInputElement))throw new Error("Can't find input for editor");if(!(r instanceof HTMLInputElement&&o instanceof HTMLInputElement))throw new Error("Can't find inputColor for editor");if(!(i instanceof HTMLButtonElement&&s instanceof HTMLButtonElement))throw new Error("Can't find Create or Update button for editor");if(!(c instanceof HTMLButtonElement&&d instanceof HTMLButtonElement))throw new Error("Can't find Start or Reset button for editor");a.editorCar.formInputCreate=e,a.editorCar.formInputEdit=n,a.editorCar.inputColorCreate=r,a.editorCar.inputColorEdit=o,a.editorCar.btnEditorUpdate=i,a.editorCar.btnEditorCreate=s,a.editorCar.btnStartRace=c,a.editorCar.btnResetRace=d})(e),e})(),r=a.cars.map((t=>((t,e)=>{const n=o('<div class="carline"> <div class="wrapper"> <div class="wrapper_controls"> <div class="carline_controls" id="carline_controls"></div> <div class="car_name" id="car_name"></div> </div> <div class="road"> <div class="ufo" id="ufo"> <svg version="1.0" xmlns="http://www.w3.org/2000/svg" width="48.000000pt" height="48.000000pt" viewBox="0 0 512.000000 512.000000" preserveAspectRatio="xMidYMid meet" class="car" id="car_img"> <g transform="translate(0.000000,512.000000) scale(0.100000,-0.100000)" stroke="none"> <path d="M2736 3959 c-387 -59 -699 -317 -822 -677 -19 -54 -38 -131 -45 -173\nl-11 -76 -137 -6 c-151 -6 -219 -22 -327 -73 -245 -116 -410 -358 -431 -634\nl-6 -80 -54 0 c-44 0 -58 -5 -78 -25 -30 -29 -32 -74 -6 -106 16 -20 31 -25\n92 -29 l72 -5 18 -52 c69 -204 243 -387 443 -463 39 -16 96 -33 127 -39 55\n-12 56 -12 85 -74 65 -139 229 -260 388 -288 102 -17 295 -7 375 20 129 44\n243 142 304 258 l32 63 205 0 205 0 33 -64 c68 -131 213 -240 359 -271 81 -17\n246 -19 329 -4 32 6 92 26 132 45 94 43 193 140 242 236 35 67 35 68 90 79\n277 57 514 282 587 559 24 89 23 291 -1 379 -55 201 -194 378 -376 479 -81 45\n-211 82 -320 90 l-95 7 -7 59 c-50 395 -356 736 -758 843 -87 24 -115 26 -340\n29 -135 1 -272 -1 -304 -7z m605 -177 c308 -83 542 -317 620 -620 10 -41 19\n-88 19 -104 l0 -28 -981 0 -980 0 7 48 c3 26 19 88 35 137 80 253 292 466 547\n550 115 37 189 44 427 41 193 -3 242 -7 306 -24z m-1378 -1356 c67 -27 115\n-115 102 -184 -16 -88 -84 -146 -170 -146 -148 0 -229 171 -132 281 53 60 129\n79 200 49z m1077 -6 c54 -27 83 -72 88 -137 5 -64 -9 -103 -54 -143 -45 -39\n-102 -54 -154 -40 -48 13 -103 59 -120 100 -18 44 -8 130 19 169 48 67 145 90\n221 51z m1053 6 c44 -18 95 -78 103 -121 20 -111 -60 -209 -171 -209 -149 0\n-225 169 -127 286 46 55 126 73 195 44z m-1523 -934 c0 -18 -72 -91 -118 -120\n-74 -48 -156 -65 -292 -60 -103 3 -122 7 -180 34 -61 29 -139 95 -161 136 -9\n17 6 18 371 18 209 0 380 -4 380 -8z m1531 -10 c-22 -41 -100 -107 -161 -136\n-58 -27 -77 -31 -180 -34 -136 -5 -218 12 -292 60 -46 29 -118 102 -118 120 0\n4 171 8 380 8 365 0 380 -1 371 -18z"/> <path d="M2985 3415 c-16 -15 -25 -36 -25 -55 0 -19 9 -40 25 -55 l24 -25 271\n0 271 0 24 25 c16 15 25 36 25 55 0 19 -9 40 -25 55 l-24 25 -271 0 -271 0\n-24 -25z"/> <path d="M985 3655 c-16 -15 -25 -36 -25 -55 0 -19 9 -40 25 -55 l24 -25 271\n0 271 0 24 25 c16 15 25 36 25 55 0 19 -9 40 -25 55 l-24 25 -271 0 -271 0\n-24 -25z"/> <path d="M185 2935 c-16 -15 -25 -36 -25 -55 0 -19 9 -40 25 -55 l24 -25 271\n0 271 0 24 25 c33 32 33 78 0 110 l-24 25 -271 0 -271 0 -24 -25z"/> <path d="M185 1335 c-16 -15 -25 -36 -25 -55 0 -19 9 -40 25 -55 l24 -25 271\n0 271 0 24 25 c33 32 33 78 0 110 l-24 25 -271 0 -271 0 -24 -25z"/> </g> </svg> </div> <div class="finish_flag"></div> </div> </div> </div> '),r=n.querySelector("#car_img"),c=n.querySelector("#car_name"),d=n.querySelector("#carline_controls"),l=n.querySelector("#ufo");if(!(r instanceof SVGElement))throw new Error("can't find SVG picture");if(!(c instanceof HTMLDivElement))throw new Error("can't find DIV element for carname");if(!(d instanceof HTMLDivElement))throw new Error("can't find DIV element for car controls");if(!(l instanceof HTMLDivElement))throw new Error("can't find DIV element for ufo");var u;return l.setAttribute("id",`ufo-${t.id}`),l.dataset.carId=t.id.toString(),a.carsHTML[t.id]=l,d.append(...(u=t.id,a.controls[u].select=s("Select",{btnType:i.BtnSelectOne,carId:u}),a.controls[u].remove=s("Remove",{btnType:i.BtnRemoveOne,carId:u}),a.controls[u].start=s("Start",{btnType:i.BtnStartOne,carId:u}),a.controls[u].reset=s("Reset",{btnType:i.BtnResetOne,carId:u}),[a.controls[u].select,a.controls[u].remove,a.controls[u].start,a.controls[u].reset])),r.setAttribute("fill",t.color),c.innerText=t.name,e&&e.length>0&&n.append(...e),n})(t)));return e.append(n,...r),t&&t.length>0&&e.prepend(...t),e},T=t=>{t.preventDefault();const e=document.querySelector("#app");if(!(e instanceof HTMLElement))throw new Error("Err");e.innerHTML="";const n=v();e.append(n)},P=()=>{const t=o('<section id="winners" class="winners"></section> '),e=(t=>{const e=o('<table class="winners_table"> <thead class="thead"> <th>#</th> <th>Car Image</th> <th>Name</th> <th>Wins</th> <th>Best time</th> </thead> <tbody id="table_winners_body"></tbody> </table> ');if(!(e.querySelector("#table_winners_body")instanceof HTMLElement))throw new Error("Can't find tBody for winners");const n=a.winnersTable.map(((t,e)=>((t,e)=>{const n=document.createElement("tr"),r=document.createElement("td"),a=document.createElement("td"),o=document.createElement("td"),i=document.createElement("td"),s=document.createElement("td"),c=document.createElementNS("http://www.w3.org/2000/svg","svg");return c.innerHTML='<g transform="translate(0.000000,512.000000) scale(0.100000,-0.100000)" stroke="none">\n<path d="M2736 3959 c-387 -59 -699 -317 -822 -677 -19 -54 -38 -131 -45 -173\nl-11 -76 -137 -6 c-151 -6 -219 -22 -327 -73 -245 -116 -410 -358 -431 -634\nl-6 -80 -54 0 c-44 0 -58 -5 -78 -25 -30 -29 -32 -74 -6 -106 16 -20 31 -25\n92 -29 l72 -5 18 -52 c69 -204 243 -387 443 -463 39 -16 96 -33 127 -39 55\n-12 56 -12 85 -74 65 -139 229 -260 388 -288 102 -17 295 -7 375 20 129 44\n243 142 304 258 l32 63 205 0 205 0 33 -64 c68 -131 213 -240 359 -271 81 -17\n246 -19 329 -4 32 6 92 26 132 45 94 43 193 140 242 236 35 67 35 68 90 79\n277 57 514 282 587 559 24 89 23 291 -1 379 -55 201 -194 378 -376 479 -81 45\n-211 82 -320 90 l-95 7 -7 59 c-50 395 -356 736 -758 843 -87 24 -115 26 -340\n29 -135 1 -272 -1 -304 -7z m605 -177 c308 -83 542 -317 620 -620 10 -41 19\n-88 19 -104 l0 -28 -981 0 -980 0 7 48 c3 26 19 88 35 137 80 253 292 466 547\n550 115 37 189 44 427 41 193 -3 242 -7 306 -24z m-1378 -1356 c67 -27 115\n-115 102 -184 -16 -88 -84 -146 -170 -146 -148 0 -229 171 -132 281 53 60 129\n79 200 49z m1077 -6 c54 -27 83 -72 88 -137 5 -64 -9 -103 -54 -143 -45 -39\n-102 -54 -154 -40 -48 13 -103 59 -120 100 -18 44 -8 130 19 169 48 67 145 90\n221 51z m1053 6 c44 -18 95 -78 103 -121 20 -111 -60 -209 -171 -209 -149 0\n-225 169 -127 286 46 55 126 73 195 44z m-1523 -934 c0 -18 -72 -91 -118 -120\n-74 -48 -156 -65 -292 -60 -103 3 -122 7 -180 34 -61 29 -139 95 -161 136 -9\n17 6 18 371 18 209 0 380 -4 380 -8z m1531 -10 c-22 -41 -100 -107 -161 -136\n-58 -27 -77 -31 -180 -34 -136 -5 -218 12 -292 60 -46 29 -118 102 -118 120 0\n4 171 8 380 8 365 0 380 -1 371 -18z"/>\n<path d="M2985 3415 c-16 -15 -25 -36 -25 -55 0 -19 9 -40 25 -55 l24 -25 271\n0 271 0 24 25 c16 15 25 36 25 55 0 19 -9 40 -25 55 l-24 25 -271 0 -271 0\n-24 -25z"/>\n<path d="M985 3655 c-16 -15 -25 -36 -25 -55 0 -19 9 -40 25 -55 l24 -25 271\n0 271 0 24 25 c16 15 25 36 25 55 0 19 -9 40 -25 55 l-24 25 -271 0 -271 0\n-24 -25z"/>\n<path d="M185 2935 c-16 -15 -25 -36 -25 -55 0 -19 9 -40 25 -55 l24 -25 271\n0 271 0 24 25 c33 32 33 78 0 110 l-24 25 -271 0 -271 0 -24 -25z"/>\n<path d="M185 1335 c-16 -15 -25 -36 -25 -55 0 -19 9 -40 25 -55 l24 -25 271\n0 271 0 24 25 c33 32 33 78 0 110 l-24 25 -271 0 -271 0 -24 -25z"/>\n</g>\n',c.setAttribute("fill",t.color.toString()),c.setAttribute("width","32px"),c.setAttribute("height","32px"),c.setAttribute("viewBox","0 0 512.000000 512.000000"),r.innerText=e.toString(),a.append(c),o.innerText=t.name,i.innerText=t.wins.toString(),s.innerText=t.time.toString(),n.append(r,a,o,i,s),n})(t,e+1+10*(a.currentWinnersPage-1))));return e.append(...n),t&&t.length>0&&e.append(...t),e})(),n=C({countTitleText:"Winners",storeField:"countWinners",storeFieldCurrentPage:"currentWinnersPage",storeFieldPages:"pagesCountWinner",btnPrevPageType:"BtnWinnerPrevPage",btnNextPageType:"BtnWinnerNextPage"});return t.append(n,e),t},S=t=>{t.preventDefault();const e=document.querySelector("#app");if(!(e instanceof HTMLElement))throw new Error("Err");e.innerHTML="";const n=P();e.append(n)},M=(t,e)=>Math.floor(Math.random()*(e-t+1)+t),B=t=>M(0,t),L=()=>{const t=["#"];for(let e=0;e<6;e+=1)t.push(M(0,14).toString(16));return t.join("")},R=async(t,e)=>{const n=`${u}?id=${t}&status=${e}`,r={id:t.toString(),status:e};try{return await c.patch(n,r).then((t=>t.json()))}catch(e){if(e instanceof Error)return"500"===e.message&&(a.carsRace[t]=!1),Promise.reject()}return t},H=t=>R(t,e.Started),I=t=>R(t,e.Stopped),x={BtnStartOne:t=>(async t=>{const{target:e}=t;if(!(e instanceof HTMLButtonElement))throw new Error("Can't find button element Start");const n=document.querySelector(`#ufo-${e.dataset.carId}`);if(!(n instanceof HTMLElement))throw new Error("err");const{carId:r}=e.dataset;if(r){const t=parseInt(r,10);y(t);const e=await H(t);a.carsRace[t]=!0,a.carsRaceTime[t]=e.distance/e.velocity,h(n,a.carsRaceTime[t])}})(t),BtnResetOne:t=>(async t=>{const{target:e}=t;if(!(e instanceof HTMLButtonElement))throw new Error("Can't find button element Start");const{carId:n}=e.dataset;if(n){const t=parseInt(n,10);await I(t),a.carsRace[t]=!1,setTimeout((()=>{a.carsHTML[t].style.transform="translate(0)"}),50),E(t)}console.log("StopOneCar click")})(t),BtnRemoveOne:e=>(async e=>{const{target:n}=e;if(!(n instanceof HTMLButtonElement))throw new Error("Can't find button element Remove");const{carId:r}=n.dataset;if(r){const e=parseInt(r,10);await(async e=>{const n=`${l}/${e}`,r={method:t.Delete};await m(e)&&await c.delete(n,r)})(e),-1!==(await g(e)).id&&(await(async e=>{const n=`${p}/${e}`,r={method:t.Delete};(await g(e)).id&&await c.delete(n,r)})(parseInt(r,10)),b())}await w(),console.log(a);const o=document.querySelector("#app");if(!(o instanceof HTMLElement))throw new Error("Can't find button element Main app");o.innerHTML="",o.append(v())})(e),BtnSelectOne:t=>(t=>{const{target:e}=t;if(!(e instanceof HTMLButtonElement))throw new Error("Can't find button element Select");const{carId:n}=e.dataset;if(n){const t=parseInt(n,10),e=a.cars.filter((e=>e.id===t))[0];a.editorCar.carEditId=t,a.editorCar.formInputEdit?.removeAttribute("disabled");const{formInputEdit:r}=a.editorCar,{inputColorEdit:o}=a.editorCar;if(!(r instanceof HTMLInputElement&&o instanceof HTMLInputElement))throw new Error("Can't load form editor");a.editorCar.inputColorEdit?.removeAttribute("disabled"),a.editorCar.btnEditorUpdate?.removeAttribute("disabled"),r.value=e.name,r.focus(),o.value=e.color}})(t),BtnAdd100Cars:t=>(async t=>{t.preventDefault(),await(async t=>{const e=[];for(let t=0;t<100;t+=1){const t=a.carsBrands[B(a.carsBrands.length-1)],n=a.carsModels[B(a.carsModels.length-1)],r=L();e.push({name:`${t} ${n}`,color:r})}const n=e.map((t=>f(t)));await Promise.allSettled(n)})(),await w();const e=v(),n=document.querySelector("#app");if(!(n instanceof HTMLElement))throw new Error("Can't find main section");n.innerHTML="",n.append(e),console.log("log",a.countCars)})(t),BtnStartRace:n=>(async n=>{n.preventDefault(),a.editorCar.btnStartRace?.setAttribute("disabled","disabled"),a.cars.forEach((t=>{y(t.id)})),await(async()=>{try{const r=a.cars.map((t=>H(t.id))),o=await Promise.all(r);let i=0;a.cars.forEach((t=>{a.carsRace[t.id]=!0,a.carsRaceTime[t.id]=o[i].distance/o[i].velocity,h(a.carsHTML[t.id],a.carsRaceTime[t.id]),i+=1})),a.editorCar.btnResetRace?.removeAttribute("disabled");const s=a.cars.map((t=>(async t=>{const n=await R(t,e.Drive);return n.success?t:n})(t.id))),d=await Promise.any(s),l=await g(d),u=(n=a.carsRaceTime[d],parseInt(n.toString(),10)/1e3);if(-1===l.id){const t={wins:1,time:u,id:d};await(async t=>{const e=await c.post(p,t);let n={id:-1,wins:0,time:0};return"object"==typeof e&&(n=Object(e)),n})(t)}else l.wins+=1,l.time>u&&(l.time=u),await(async e=>{const n=`${p}/${e.id}`,r={method:t.Put},{wins:a,time:o,id:i}=e,s={id:i,wins:a,time:o};let d={time:0,wins:0,id:0};if(await g(e.id)){const t=await c.put(n,s,r);"object"==typeof t&&(d=Object(t))}return d})(l);return await b(),s}catch(t){return t instanceof Error?"nobody wins":Promise.reject(new Error("Cant resolve promise"))}var n})(),console.log("StartRace click")})(n),BtnResetRace:t=>(async t=>{t.preventDefault();const{target:e}=t;if(!(e instanceof HTMLButtonElement))throw new Error("Can't find button element Reset");a.cars.forEach((async t=>{t.id&&(await I(t.id),a.carsRace[t.id]=!1,setTimeout((()=>{a.carsHTML[t.id].style.transform="translate(0)"}),50),E(t.id))})),a.editorCar.btnResetRace?.setAttribute("disabled","disabled"),a.editorCar.btnStartRace?.removeAttribute("disabled")})(t),BtnCreateCar:t=>(async t=>{t.preventDefault();const e=a.editorCar.formInputCreate?.value,n=a.editorCar.inputColorCreate?.value;e&&n&&await f({name:e,color:n}),await w();const r=v(),o=document.querySelector("#app");if(!(o instanceof HTMLElement))throw new Error("Can't find main section");o.innerHTML="",o.append(r)})(t),BtnUpdateEdit:e=>(async e=>{e.preventDefault();const n=a.editorCar.carEditId,r=a.editorCar.formInputEdit?.value,o=a.editorCar.inputColorEdit?.value;r&&o&&await(async e=>{const n=`${l}/${e.id}`,r={method:t.Put},{name:a,color:o,id:i}=e,s={name:a,color:o,id:i};let d={id:-1,name:"unknown",color:"unknown"};if(await m(e.id)){const t=await c.put(n,s,r);"object"==typeof t&&(d=Object(t))}return d})({id:n,name:r,color:o}),await w();const i=v(),s=document.querySelector("#app");if(!(s instanceof HTMLElement))throw new Error("Can't find main section");s.innerHTML="",s.append(i)})(e),BtnGarageNextPage:t=>(async t=>{if(t.preventDefault(),console.log("next"),a.currentGaragePage<a.pagesCountGarage){a.currentGaragePage+=1,await w();const t=v(),e=document.querySelector("#app");if(!(e instanceof HTMLElement))throw new Error("Can't find main section");e.innerHTML="",e.append(t)}})(t),BtnGaragePrevPage:t=>(async t=>{if(t.preventDefault(),console.log("prev"),a.currentGaragePage>1){a.currentGaragePage-=1,await w();const t=v(),e=document.querySelector("#app");if(!(e instanceof HTMLElement))throw new Error("Can't find main section");e.innerHTML="",e.append(t)}})(t),BtnWinnerNextPage:t=>(async t=>{if(t.preventDefault(),console.log("next"),a.currentWinnersPage<a.pagesCountWinner){a.currentWinnersPage+=1,await b();const t=P(),e=document.querySelector("#app");if(!(e instanceof HTMLElement))throw new Error("Can't find main section");e.innerHTML="",e.append(t)}})(t),BtnWinnerPrevPage:t=>(async t=>{if(t.preventDefault(),a.currentWinnersPage>1){a.currentWinnersPage-=1,await b();const t=P(),e=document.querySelector("#app");if(!(e instanceof HTMLElement))throw new Error("Can't find main section");e.innerHTML="",e.append(t)}})(t)},A=t=>{const{target:e}=t;if(e instanceof HTMLButtonElement){const{btnType:n}=e.dataset;n&&x[n](t)}};document.addEventListener("DOMContentLoaded",(async()=>{await w(),console.log(a);const t=v();document.body.append((()=>{const t=o('<header class="header"> <div class="container"> <div class="logo"> <svg version="1.0" xmlns="http://www.w3.org/2000/svg" width="48.000000pt" height="48.000000pt" viewBox="0 0 512.000000 512.000000" preserveAspectRatio="xMidYMid meet"> <g transform="translate(0.000000,512.000000) scale(0.100000,-0.100000)"> <path d="M2366 4270 c-92 -15 -239 -56 -329 -94 -189 -78 -351 -190 -503 -348\n-346 -360 -452 -783 -339 -1345 69 -340 239 -691 480 -990 193 -241 489 -485\n725 -601 84 -42 103 -47 160 -47 53 1 79 7 140 36 246 116 540 359 753 624\n235 292 404 640 471 977 113 560 8 984 -334 1342 -203 212 -429 346 -708 418\n-103 26 -137 30 -287 33 -93 2 -196 0 -229 -5z m-721 -1151 c265 -33 458 -136\n571 -306 74 -112 130 -304 135 -468 6 -188 2 -195 -139 -195 -184 0 -374 47\n-501 124 -210 128 -331 383 -331 701 0 116 5 131 50 148 25 9 121 7 215 -4z\nm2076 -18 c16 -20 19 -40 19 -131 0 -312 -122 -569 -331 -696 -127 -77 -317\n-124 -501 -124 -115 0 -131 10 -142 82 -10 66 12 259 40 358 77 266 249 434\n509 500 109 27 204 39 303 37 75 -2 86 -5 103 -26z m-1401 -1396 c172 -86 314\n-86 486 1 66 34 73 35 100 23 36 -18 52 -59 36 -94 -14 -31 -167 -107 -250\n-124 -84 -17 -208 -14 -290 9 -101 28 -210 84 -224 116 -15 33 0 75 32 91 34\n17 31 18 110 -22z"/> <path class="alien" d="M1523 2898 c8 -102 46 -240 88 -319 86 -161 272 -263 519 -285 l83\n-7 -6 90 c-7 101 -45 243 -85 318 -37 68 -134 164 -207 202 -83 44 -192 72\n-304 80 l-94 6 6 -85z"/> <path class="alien" d="M3421 2969 c-76 -13 -184 -52 -248 -91 -150 -90 -244 -271 -260 -503\nl-6 -85 34 0 c64 0 219 30 286 55 223 84 345 268 369 556 l7 79 -64 -1 c-35\n-1 -88 -5 -118 -10z"/> </g> </svg> <a class="header_link" href="https://rolling-scopes-school.github.io/dudarik-JSFE2022Q3/async-race/"> <h1 class="main_title">x-com race</h1> </a> </div> <menu class="menu"> <button class="btn" id="btnToWinners">To Winners</button> <button class="btn" id="btnToGarage">To Garage</button> </menu> </div> </header> '),e=t.querySelector("#btnToWinners"),n=t.querySelector("#btnToGarage");return e?.addEventListener("click",S),n?.addEventListener("click",T),t})()),document.body.append((t=>{const e=o('<main id="app" class="main"></main> ');return e.addEventListener("click",A),t&&t.length>0&&e.append(...t),e})([t])),document.body.append(o('<footer class="footer">This is footer</footer> '))}))})();